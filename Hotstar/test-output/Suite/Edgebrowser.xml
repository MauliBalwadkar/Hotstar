<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-FNI86KM" failures="0" tests="4" name="Edgebrowser" time="0.064" errors="0" timestamp="2023-09-27T17:20:10 IST">
  <testcase classname="testNGTestPack.VerifyMoviesSectionFunctionalityTestNG" name="@BeforeTest launchBrowser" time="-1.695815410383E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @BeforeTest annotated launchBrowser.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeTest annotated launchBrowser.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest launchBrowser -->
  <testcase classname="testNGTestPack.VerifySportsFunctionality" name="@BeforeTest openBrowser" time="-1.695815410388E9">
    <skipped/>
  </testcase> <!-- @BeforeTest openBrowser -->
  <testcase classname="testNGTestPack.VerifySportsFunctionality" name="@BeforeClass createPOMPObject" time="-1.695815410391E9">
    <skipped/>
  </testcase> <!-- @BeforeClass createPOMPObject -->
  <testcase classname="testNGTestPack.VerifySportsFunctionality" name="@BeforeMethod openSportsSection" time="-1.695815410395E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod openSportsSection -->
  <testcase classname="testNGTestPack.VerifySportsFunctionality" name="@BeforeMethod openSportsSection" time="-1.695815410404E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod openSportsSection -->
  <testcase classname="testNGTestPack.VerifySportsFunctionality" name="@BeforeMethod openSportsSection" time="-1.695815410415E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod openSportsSection -->
  <testcase classname="testNGTestPack.VerifySportsFunctionality" name="@AfterClass clearObject" time="-1.695815410422E9">
    <skipped/>
  </testcase> <!-- @AfterClass clearObject -->
  <testcase classname="testNGTestPack.VerifyMoviesSectionFunctionalityTestNG" name="@BeforeClass createPomObject" time="-1.695815410426E9">
    <skipped/>
  </testcase> <!-- @BeforeClass createPomObject -->
  <testcase classname="testNGTestPack.VerifyMoviesSectionFunctionalityTestNG" name="@BeforeMethod openTheApplication" time="-1.695815410429E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod openTheApplication -->
  <testcase classname="testNGTestPack.VerifyMoviesSectionFunctionalityTestNG" name="@AfterClass clearObject" time="-1.695815410435E9">
    <skipped/>
  </testcase> <!-- @AfterClass clearObject -->
  <testcase classname="testNGTestPack.VerifyMoviesSectionFunctionalityTestNG" name="@AfterTest closeBrowser" time="-1.695815410438E9">
    <skipped/>
  </testcase> <!-- @AfterTest closeBrowser -->
  <testcase classname="testNGTestPack.VerifySportsFunctionality" name="@AfterTest closeTheBrowser" time="-1.695815410443E9">
    <skipped/>
  </testcase> <!-- @AfterTest closeTheBrowser -->
  <testcase classname="testNGTestPack.VerifySportsFunctionality" name="verifyCricketFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- verifyCricketFunctionality -->
  <testcase classname="testNGTestPack.VerifySportsFunctionality" name="verifyFootBallFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- verifyFootBallFunctionality -->
  <testcase classname="testNGTestPack.VerifySportsFunctionality" name="verifyAsiaCupFunctonality" time="0.0">
    <skipped/>
  </testcase> <!-- verifyAsiaCupFunctonality -->
  <testcase classname="testNGTestPack.VerifyMoviesSectionFunctionalityTestNG" name="verifyPopularMoviesSection" time="0.0">
    <skipped/>
  </testcase> <!-- verifyPopularMoviesSection -->
</testsuite> <!-- Edgebrowser -->
